{"version":3,"sources":["Components/Header.js","Components/CreateArea.js","Components/Note.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","CreateArea","useState","note","setNote","color","setColor","isExpanded","setExpanded","handleChange","e","preventDefault","target","name","value","date","Date","prevalue","id","nanoid","toLocaleDateString","type","title","placeholder","onChange","content","onClick","localStorage","setItem","JSON","stringify","Note","style","backgroundColor","bgcolor","deleteNote","noteid","App","notes","i","length","push","parse","getItem","key","window","location","reload","removeItem","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAYeA,MARf,SAAgBC,GACZ,OACI,qBAAKC,UAAU,SAAf,SACI,8C,oCC4EGC,MA7Ef,SAAoBF,GAEhB,MAA0BG,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAyBF,qBAAzB,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAmCJ,oBAAS,GAA5C,mBAAOK,EAAP,KAAoBC,EAApB,KAEA,SAASC,EAAaC,GAClBA,EAAEC,iBAEF,MAAuBD,EAAEE,OAAlBC,EAAP,EAAOA,KAAOC,EAAd,EAAcA,MAERC,EAAO,IAAIC,KAEI,YAAlBN,EAAEE,OAAOC,MACRP,EAASI,EAAEE,OAAOE,OAGtBV,GAAQ,SAACa,GACL,kCACOA,GADP,gBAEIC,GAAKC,cACLJ,KAAOA,EAAKK,sBACXP,EAAQC,OAcrB,OACI,8BACI,iCAEKP,GACG,uBACIc,KAAK,OACLR,KAAK,QACLC,MAASX,EAAKmB,MACdC,YAAY,oBACZC,SAAUf,IAIlB,4BACI,0BACII,KAAK,UACLC,MAAOX,EAAKsB,QACZF,YAAY,mBACZC,SAAUf,EACViB,QAxBG,SAAChB,GACpBF,GAAY,QA2BJ,uBACIR,UAAU,cACVwB,SAAUf,EACVI,KAAK,UACLC,MAAOT,GAAY,UACnBgB,KAAK,UAGT,wBACCK,QAzCO,SAAChB,GACjBiB,aAAaC,QAAQzB,EAAKe,GAAGW,KAAKC,UAAU3B,KAuCpC,SAEK,4BAAG,cAAC,IAAD,c,MCtDT4B,MAjBf,SAAchC,GAMV,OACI,sBAAKC,UAAU,OAAOgC,MAAO,CAACC,gBAAgBlC,EAAMmC,SAApD,UACI,oBAAIlC,UAAU,QAAd,SAAuBD,EAAMuB,QAC7B,mBAAGtB,UAAU,UAAb,SAAwBD,EAAM0B,UAC9B,mBAAGzB,UAAU,OAAb,SAAqBD,EAAMgB,OAC3B,uBAAOM,KAAK,QAAQrB,UAAU,uBAC9B,sBAAMA,UAAWD,EAAMmB,GAAIQ,QAAS,SAAChB,GAAD,OAAKX,EAAMoC,WAAWpC,EAAMqC,SAAhE,SAAyE,cAAC,IAAD,U,MCoCtEC,MA5Cf,SAAatC,GAIT,IAFA,MAA4BG,mBAAS,IAArC,mBAAOoC,EAAP,KAEQC,GAFR,KAEY,GAAEA,EAAEZ,aAAaa,OAAOD,IAChCD,EAAMG,KAAKZ,KAAKa,MAAMf,aAAagB,QAAQhB,aAAaiB,IAAIL,MAGhE,IAAMJ,EAAa,SAACjB,GAChB2B,OAAOC,SAASC,QAAO,GACvBpB,aAAaqB,WAAW9B,IAG5B,OACI,sBAAKlB,UAAU,MAAf,UAEI,cAAC,EAAD,IACA,cAAC,EAAD,IAECsC,EAAMW,KAAI,SAAC9C,EAAKyC,GACb,OAAGzC,EAEK,cAAC,EAAD,CACIiC,OAAQjC,EAAKe,GAEbI,MAAOnB,EAAKmB,MACZG,QAAStB,EAAKsB,QACdV,KAAMZ,EAAKY,KACXmB,QAAS/B,EAAK+B,QACdC,WAAcA,GALPS,GAWX,6BChCTM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.fedc9f58.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className='header'>\r\n            <h3>Notes App</h3>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","\r\nimport { nanoid } from 'nanoid';\r\nimport React, { useState  } from 'react';\r\nimport './CreateArea.css';\r\nimport {MdAdd} from 'react-icons/md';\r\n\r\nfunction CreateArea(props) {\r\n\r\n    const [note , setNote ] = useState({});\r\n    const [color,setColor] = useState();\r\n    const [isExpanded , setExpanded] = useState(false);\r\n\r\n    function handleChange(e){\r\n        e.preventDefault();\r\n\r\n        const {name , value} = e.target;\r\n\r\n        const date = new Date();\r\n\r\n        if(e.target.name === 'bgcolor'){\r\n            setColor(e.target.value);\r\n        }; \r\n\r\n        setNote((prevalue)=>{\r\n            return{\r\n                ...prevalue,\r\n                id : nanoid(),\r\n                date : date.toLocaleDateString(),\r\n                [name] : value\r\n            };\r\n        });      \r\n\r\n    };  \r\n        \r\n    const handleClick = (e)=>{             \r\n        localStorage.setItem(note.id,JSON.stringify(note));       \r\n    };    \r\n  \r\n    const handleExpanded = (e)=>{\r\n        setExpanded(true);     \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n\r\n                {isExpanded && (\r\n                    <input \r\n                        type='text' \r\n                        name='title' \r\n                        value = {note.title}\r\n                        placeholder='Create a Title ..'       \r\n                        onChange={handleChange} \r\n                    />\r\n                )}        \r\n\r\n                <p>\r\n                    <textarea \r\n                        name='content'\r\n                        value={note.content}\r\n                        placeholder='Create a Note ..'        \r\n                        onChange={handleChange}   \r\n                        onClick={handleExpanded}                   \r\n                    />\r\n                </p>\r\n\r\n                <input \r\n                    className='colorpicker' \r\n                    onChange={handleChange} \r\n                    name=\"bgcolor\" \r\n                    value={color?color:\"#FFF5B3\"} \r\n                    type='color'>\r\n                </input>                \r\n\r\n                <button\r\n                 onClick={handleClick}>\r\n                     <p><MdAdd /></p>\r\n                </button>\r\n            </form>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateArea;","\r\nimport React from 'react';\r\nimport './note.css';\r\nimport {MdDeleteForever} from 'react-icons/md';\r\n\r\nfunction Note(props) {\r\n\r\n    const changeNoteColor = (id)=>{\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className='note' style={{backgroundColor:props.bgcolor}}>\r\n            <h1 className='title'>{props.title}</h1>\r\n            <p className='content'>{props.content}</p>\r\n            <p className='date'>{props.date}</p>  \r\n            <input type='color' className='note-color-changer' />\r\n            <span className={props.id} onClick={(e)=>props.deleteNote(props.noteid)}><MdDeleteForever /></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Note;","\n\nimport React, { useState } from 'react';\nimport Header from './Components/Header'\nimport CreateArea from './Components/CreateArea';\nimport Note from './Components/Note';\n\nimport './App.css';\n\nfunction App(props) {\n\n    const [notes , setNotes ] = useState([]);\n\n    for(var i = 0;i<localStorage.length;i++){       \n        notes.push(JSON.parse(localStorage.getItem(localStorage.key(i))));       \n    };\n\n    const deleteNote = (id)=>{\n        window.location.reload(true);\n        localStorage.removeItem(id);\n    };\n  \n    return (\n        <div className='App'>\n\n            <Header />\n            <CreateArea  /> \n\n            {notes.map((note,key)=>{\n                if(note){\n                    return(\n                        <Note \n                            noteid={note.id}\n                            key = {key} \n                            title={note.title}\n                            content={note.content} \n                            date={note.date}\n                            bgcolor={note.bgcolor}\n                            deleteNote = {deleteNote}\n                        />                            \n                    )  \n                }                          \n                else{\n                    return(\n                        <p></p>\n                    )\n                }\n            })}\n\n        </div>\n    );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}